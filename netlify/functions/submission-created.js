const nodemailer = require('nodemailer');

exports.handler = async function(event, context) {
  const { payload } = JSON.parse(event.body);
  const { data } = payload;

  // Honeypot field: if this is filled, it's a bot.
  if (data['bot-field']) {
    console.log('Honeypot field filled, submission ignored.');
    return {
      statusCode: 200,
      body: 'Honeypot triggered. Submission ignored.',
    };
  }

  // Create a transporter object using Maileroo SMTP transport
  let transporter = nodemailer.createTransport({
    host: process.env.MAILEROO_HOST,
    port: process.env.MAILEROO_PORT,
    secure: process.env.MAILEROO_PORT == 465, // true for 465, false for other ports
    auth: {
      user: process.env.MAILEROO_USER,
      pass: process.env.MAILEROO_PASS,
    },
  });

  // Format the email body
  const emailBody = `
    Name: ${data.firstname || ''} ${data.lastname || ''}
    Email: ${data.email || 'N/A'}
    Organization: ${data.organization || 'N/A'}
    Phone: ${data.phone || 'N/A'}

    Message:
    ${data.message || 'N/A'}
  `;

  // Setup email data
  let mailOptions = {
    from: `"Website Contact Form" <${process.env.MAILEROO_USER}>`,
    to: process.env.MAIL_TO,
    replyTo: data.email,
    subject: data.subject, // The subject is already generated by our client-side script
    text: emailBody,
  };

  try {
    await transporter.sendMail(mailOptions);
    return {
      statusCode: 200,
      body: 'Email sent successfully!',
    };
  } catch (error) {
    console.error('Error sending email:', error);
    return {
      statusCode: 500,
      body: 'Failed to send email.',
    };
  }
};
